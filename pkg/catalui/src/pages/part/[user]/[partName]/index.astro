---
import Layout from '@src/layouts/Layout.astro';
import PartPoster from '@src/components/PartPoster.astro';
import type { CollectionEntry } from 'astro:content';
import { getCollection, getEntry } from 'astro:content';
import type { tOnePart } from '@src/lib/util.ts';
import { splitPartPath, prunePrefix } from '@src/lib/util.ts';
import '@src/styles/styling-vars.css';

interface tOneP {
	params: tOnePart;
}

export async function getStaticPaths() {
	const parts = await getCollection('parts');
	const listPath: Array<tOneP> = [];
	for (const oneD of parts) {
		listPath.push({ params: splitPartPath(oneD.id) });
	}
	return listPath;
}

const { user, part } = Astro.params;
const partId = `${user}/${part}`;
const part = (await getEntry('parts', partId)) as CollectionEntry<'parts'>;
---

<Layout title={`Part ${part.id}`}>
	<!--p><a href="part-list">part-list</a></p-->
	<h1>A part page for {prunePrefix(part.id)}</h1>
	<PartPoster part={part} />
</Layout>

<style>
	/* p > a {
		color: var(--c1w);
	} */
	h1 {
		font-size: 2rem;
		font-weight: bold;
		color: var(--c2w);
		margin-left: 4rem;
	}
</style>
