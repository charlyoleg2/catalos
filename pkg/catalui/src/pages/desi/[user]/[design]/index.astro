---
import Layout from '@src/layouts/Layout.astro';
import DesiPoster from '@src/components/DesiPoster.astro';
import type { CollectionEntry } from 'astro:content';
import { getCollection, getEntry } from 'astro:content';
import type { tOneDesi } from '@src/lib/util.ts';
import { splitDesiPath } from '@src/lib/util.ts';
import '@src/styles/styling-vars.css';

interface tOneP {
	params: tOneDesi;
}

export async function getStaticPaths() {
	const designs = await getCollection('designs');
	const listPath: Array<tOneP> = [];
	for (const oneD of designs) {
		listPath.push({ params: splitDesiPath(oneD.id) });
	}
	return listPath;
}

const { user, design } = Astro.params;
const designId = `${user}/${design}`;
const desi = (await getEntry('designs', designId)) as CollectionEntry<'designs'>;
---

<Layout title={`Design ${desi.id}`}>
	<p><a href="design-list">design-list</a></p>
	<DesiPoster design={desi} />
</Layout>

<style>
	p > a {
		color: var(--c1w);
	}
</style>
