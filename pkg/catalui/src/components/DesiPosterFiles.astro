---
import type { CollectionEntry } from 'astro:content';
import { renameExt, selectFileTable } from '@src/lib/fileExt.ts';
import '@src/styles/styling-vars.css';
import '@colinaut/action-table/dist/action-table.css';

interface Props {
	design: CollectionEntry<'designs'>;
}

const { design } = Astro.props;
---

<article>
	<action-table sort="Type">
		<table>
			<caption>Design files</caption>
			<thead>
				<tr>
					<th>File</th>
					<th>Type</th>
					<th>Size</th>
					<th no-sort></th>
					<th no-sort></th>
					<th no-sort></th>
				</tr>
			</thead>
			<tbody>
				{
					design.data.files
						.filter((item) => selectFileTable(item.fileType))
						.map((item) => (
							<tr>
								<td>{item.fileName}</td>
								<td>{renameExt(item.fileType)}</td>
								<td>{item.fileSize}</td>
								<td class="rvd">
									<a href={`u/${design.id}/${item.fileName}`}>raw</a>
								</td>
								<td class="rvd">view</td>
								<td class="rvd">
									<a
										href={`u/${design.id}/${item.fileName}`}
										download={item.fileName}
									>
										download
									</a>
								</td>
							</tr>
						))
				}
			</tbody>
		</table>
	</action-table>
</article>

<script>
	import '@colinaut/action-table';
</script>

<style>
	table > caption {
		color: var(--cLight);
		background-color: var(--c3w);
	}
	table > tbody > tr:nth-child(odd) {
		background-color: var(--c4w);
	}
	table > tbody > tr:nth-child(even) {
		background-color: var(--c5b);
	}
	/*
	table > tbody > tr.sorted:nth-child(even) {
		background-color: var(--cLight);
	}
	*/
	th,
	td {
		padding: 0.2rem 2rem;
	}
	td.rvd {
		padding: 0.2rem 0.5rem;
	}
</style>
