---
import type { CollectionEntry } from 'astro:content';
import { getEntry } from 'astro:content';
import { prunePrefix } from '@src/lib/util.ts';
import { imageList } from '@src/lib/sortedParts';
import '@src/styles/styling-vars.css';

interface Props {
	part: CollectionEntry<'parts'>;
}

const { part } = Astro.props;
const user = await getEntry(part.data.owner);
const durl = `part/${part.id}`;
const remainList = imageList(part).slice(0, 2).length;
---

<a href={durl}>
	<article>
		<h2>by {user.id}</h2>
		<h1>{prunePrefix(part.id)}</h1>
		<div>
			{
				imageList(part)
					.slice(0, 2)
					.map((item) => (
						<img
							alt={`u/${part.id}/${item.fileName}`}
							src={`u/${part.id}/${item.fileName}`}
							class="vignette"
						/>
					))
			}
			{[0, 1].slice(remainList).map(() => <div class="vignette" />)}
		</div>
	</article>
</a>

<style>
	a {
		margin: 1rem;
	}
	article {
		width: 20rem;
		background-color: var(--c5b);
		padding: 0.2rem;
		margin: 0;
		border-radius: var(--cornerSurface);
	}
	h2 {
		font-size: 1rem;
		font-style: italic;
		font-weight: bold;
		color: var(--c4w);
		margin: 0.5rem 0.5rem;
	}
	h1 {
		font-size: 1.8rem;
		font-weight: regular;
		color: var(--c1w);
		margin: 0.2rem 0.5rem;
	}
	img.vignette {
		display: inline-block;
		width: 8rem;
		height: 8rem;
		margin: 0.5rem 0.8rem;
		background-color: var(--c5b);
		object-fit: contain;
	}
	div.vignette {
		display: inline-block;
		width: 8rem;
		height: 8rem;
		margin: 0.5rem 0.8rem;
		background-color: var(--c2w);
	}
</style>
